#!/usr/bin/env bash

set -e

all=0
sign_all=0
declare -A unames

add_uname() {
  local file="$1"
  modules_suffix="${file##usr/lib/modules/}"
  uname="${modules_suffix%%/*}"
  unames["$uname"]=""
}

while read -r line; do
  case "$line" in
    usr/src/*/dkms.conf | usr/lib/firmware/*)
      sign_all=1
      break
      ;;
    usr/bin/booster | usr/bin/booster-um | usr/lib/booster/*)
      sign_all=1
      break
      ;;
    usr/lib/modules/*/vmlinuz | usr/lib/modules/*/extramodules/*)
      add_uname "$line"
      ;;
    *)
      all=1
      break
      ;;
  esac
done

# Generate and sign UKI files for all kernels
if [ "${sign_all}" -eq "1" ]; then
  booster-um -G
  exit
fi

# Sbctl hook should sign the UKI file if it already exists in database
export ALWAYS_SIGN=1

# Generate UKI files for all kernels
if [ "${all}" -eq "1" ]; then
  booster-um -G
  exit
fi

for uname in "${!unames[@]}"; do
  kernel_dir="/usr/lib/modules/${uname}"
  if ! pacman -Qqo "${kernel_dir}/pkgbase" > /dev/null 2>&1; then
    # if pkgbase does not belong to any package then skip this kernel
    continue
  fi
  read -r pkgbase < "${kernel_dir}/pkgbase"

  # Genearate UKI file for updated kernel
  booster-um -u "$pkgbase" "$uname"
done
