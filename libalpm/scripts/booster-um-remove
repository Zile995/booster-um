#!/usr/bin/env bash

set -e

# Associative array with the kernel package name as the key
declare -A kernels

# An array of sorted pkgbases
declare -a sorted_pkgbases=()

add_kernel() {
  local kernel_dir="$1"
  local pkgbase

  # If pkgbase does not belong to any package then skip this kernel
  if ! pacman -Qqo "${kernel_dir}/pkgbase" > /dev/null 2>&1; then return; fi

  # Return if there is a pkgbase key
  read -r pkgbase < "${kernel_dir}/pkgbase"
  [[ -v kernels[$pkgbase] ]] && return

  # Assign the uname value for kernel pkgbase
  kernels["$pkgbase"]="$kernel_dir"
}

while read -r line; do
  case "$line" in
    usr/bin/booster-um)
      booster-um -R
      exit
      ;;
    usr/lib/modules/*/vmlinuz)
      add_kernel "/${line%/vmlinuz}"
      ;;
  esac
done

# Sort the pkgbases
readarray -t sorted_pkgbases < <(printf '%s\n' "${!kernels[@]}" | sort)

# Remove UKI for specified kernels
export REMOVE_EFI=1; booster-um -r "${sorted_pkgbases[@]}"