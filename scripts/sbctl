#!/usr/bin/env bash

set -e

# Flag which controls UKI signing
# If this value is set to 0, then the UKI file will be always signed.
# If this value is set to 1, then the UKI file will be signed if it does not exist in the sbctl database
if [[ -z $ALWAYS_SIGN ]]; then
  ALWAYS_SIGN=0
fi

# Checks if the file is in the sbctl database
_in_db() {
  sbctl list-files --json | yq -r '.[].file' | grep -qw "$1"
}

# Signs the UKI file
_sign_uki() {
  local uki="$1"
  # Return if sbsign is used or if the sbctl is not installed.
  # Also return if the UKI should not be signed
  if [[ $SBSIGN -eq 0 ]] || ! _command_exists sbctl || ! _should_sign_uki; then return; fi

  # Sbctl hook should sign the UKI file if it already exists in database
  if [[ $ALWAYS_SIGN -eq 1 ]] && _in_db "$uki"; then return; fi

  # Sign UKI file with sbctl
  sbctl sign --save "$uki" | nl -bn -w1 || :
}

# Removes the file from the sbctl database
_remove_from_db() {
  local file="$1"

  # Return if sbctl doesn't exists
  if ! _command_exists sbctl; then return; fi

  # Remove the file if it exists in the database
  if _in_db "$file"; then
    # Remove the file from sbctl database
    sbctl remove-file "$file" | nl -bn -w1 || :
  fi
}